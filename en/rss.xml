<rss version="2.0">
  <channel>
    <title>DevCrafting Web site/blog - Clément Bouillier</title>
    <link>http://www.devcrafting.com</link>
    <description>Articles about software craftsmanship, Agile, software architecture and design</description>
    <item>
      <title>History of a monolith: split it ?</title>
      <link>http://www.devcrafting.com/en/blog/2018/07-history-of-a-monolith-part3bis/</link>
      <guid>http://www.devcrafting.com/en/blog/2018/07-history-of-a-monolith-part3bis/</guid>
      <pubDate>Wed, 18 Jul 2018 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;In &lt;a href="/en/blog/2018/04-history-of-a-monolith-part3/"&gt;the previous post&lt;/a&gt;, I talked about organizational changes I observed on my third contract in 12 years on a monolith that grew up quickly with a team of 3 up to 20+ people today. In this post, I focus on design and technical changes we started one year ago.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>History of a monolith: getting bigger and bigger...</title>
      <link>http://www.devcrafting.com/en/blog/2018/04-history-of-a-monolith-part3/</link>
      <guid>http://www.devcrafting.com/en/blog/2018/04-history-of-a-monolith-part3/</guid>
      <pubDate>Sun, 29 Apr 2018 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;In the &lt;a href="/en/tag/history-of-a-monolith"&gt;previous parts of this series&lt;/a&gt;, I focused on my two first (quite long) takes on a project we started at the end of 2005. I left the project in early 2007, I came back in 2009, and left again in 2012. and this post is about a new come back (for a bit more than a year now) on this 12 years old project. I will try to expose lessons learned from this experience, from organizational and technical points of view.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>History of a monolith: technical evolution with the rise of keywords</title>
      <link>http://www.devcrafting.com/en/blog/2018/02-history-of-a-monolith-part2bis/</link>
      <guid>http://www.devcrafting.com/en/blog/2018/02-history-of-a-monolith-part2bis/</guid>
      <pubDate>Sun, 25 Feb 2018 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;In the &lt;a href="/en/blog/2018/01-history-of-a-monolith-part2/"&gt;previous part of this series&lt;/a&gt;, I focused on organisational issues we had and solutions we found when I cameback in 2009 on the monolith project we started at the end of 2005. In this post, I focus on technical issues and solutions.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>History of a monolith: organisation evolution over the years</title>
      <link>http://www.devcrafting.com/en/blog/2018/01-history-of-a-monolith-part2/</link>
      <guid>http://www.devcrafting.com/en/blog/2018/01-history-of-a-monolith-part2/</guid>
      <pubDate>Tue, 30 Jan 2018 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;In the &lt;a href="/en/blog/2017/11-history-of-a-monolith-part1/"&gt;first part of this series&lt;/a&gt;, I focused on the genesis of the monolith we started at the end of 2005. I left the project in early 2007. It was planned to grow quickly, then the team would have to adapt (in size and more...). I came back on the project in 2009, this post highlights new challenges we faced from organisational point of view, evolution we made (lots of experiments) and consequences until 2012 when I left again.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>History of a monolith: genesis</title>
      <link>http://www.devcrafting.com/en/blog/2017/11-history-of-a-monolith-part1/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/11-history-of-a-monolith-part1/</guid>
      <pubDate>Mon, 06 Nov 2017 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;I would like to share an experience I started at the end of 2005 and I followed in time up to now (in 2017). In 2005, the team I was working in (3 persons) started a from-scratch rebuild of a legacy Notes application. Today, it is a huge monolith application with lots of legacy code, having several issues these kind of application have. My goal is to retrospect its history, to hightlight impacts of some choices and then try to find solutions.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Functional architecture and hexagonal architecture - Introducing bind, Monad and Continuation Expressions</title>
      <link>http://www.devcrafting.com/en/blog/2017/08-functional-architecture-part3/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/08-functional-architecture-part3/</guid>
      <pubDate>Tue, 22 Aug 2017 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;In the &lt;a href="http://www.devcrafting.com/en/blog/2017/06-functional-architecture-part2/"&gt;previous post&lt;/a&gt;, I started a first F# implementation, showing "beauty" of F# code ;). Now it is time to improve a bit the controller function to be more fluent.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Functional architecture and hexagonal architecture - Introducing Railway Oriented Programming</title>
      <link>http://www.devcrafting.com/en/blog/2017/06-functional-architecture-part2/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/06-functional-architecture-part2/</guid>
      <pubDate>Tue, 06 Jun 2017 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;As a followup of the &lt;a href="http://www.devcrafting.com/en/blog/2017/05-functional-architecture-part1/"&gt;previous post&lt;/a&gt;, I would like to adjust the last example (using some comments' suggestions) and introduce a first basic F# implementation, which will allow to illustrate Railway Oriented Programming.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Functional architecture and hexagonal architecture - "Classic" OOP implementations</title>
      <link>http://www.devcrafting.com/en/blog/2017/05-functional-architecture-part1/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/05-functional-architecture-part1/</guid>
      <pubDate>Mon, 22 May 2017 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;I already mentioned the &lt;a href="https://www.youtube.com/watch?v=US8QG9I1XW0"&gt;video from Mark Seeman about Functional Architecture&lt;/a&gt;. I proposed sessions on this subject at &lt;a href="http://www.socrates-ch.org"&gt;SocratesCH&lt;/a&gt; to discuss and to understand it better. My understanding is still far from perfect, and in this blog post, I would like to give some feedbacks on experiments I have done with an OOP language, sketching hexagonal architecture implementations, before switching to functional implementation.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Functional code refactoring: towards immutability and pure functions</title>
      <link>http://www.devcrafting.com/en/blog/2017/02-functional-refactoring-part1-towards-immutability-and-pure-functions/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/02-functional-refactoring-part1-towards-immutability-and-pure-functions/</guid>
      <pubDate>Mon, 27 Feb 2017 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;In september 2015, I tried a refactoring kata to practice my F# skills. In this attemp, I focused on immutability and pure functions, keeping in mind what I know about refactoring in other language.&lt;/p&gt;
&lt;p&gt;Then, in november 2016, I assisted to the refactoring workshop from &lt;a href="https://twitter.com/mfeathers"&gt;Michael Feather&lt;/a&gt; at &lt;a href="http://www.buildstuff.lt"&gt;BuildStuff&lt;/a&gt;. And talk a bit with him about the idea of identifying functional code smells and refactoring patterns.&lt;/p&gt;
&lt;p&gt;So I like to start to write a bit on this subject, from my humble newbie perspective :).&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Specialization in Agile (part 2): from theory to practice</title>
      <link>http://www.devcrafting.com/en/blog/2017/01-specialization-in-agile-part2/</link>
      <guid>http://www.devcrafting.com/en/blog/2017/01-specialization-in-agile-part2/</guid>
      <pubDate>Sun, 15 Jan 2017 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;In the &lt;a href="/en/blog/2011/10-specialization-in-agile"&gt;first part post&lt;/a&gt; (5 years ago...yes!), I talked about some refreshing visions on IT industry. It was quite rhetorical, now it’s time to illustrate with real examples from my experiences. 5 years later, sadly, I just have more examples...&lt;/p&gt;
&lt;p&gt;The mainstream organisation is still quite far from Features Team, collocated teams and all other concepts that were proposed early by Agile advocates (and even Lean before Agile...). Even if Agile is more and more popular, it is often interpreted just as a method, missing crucial aspects.&lt;/p&gt;
&lt;p&gt;So let's try to dive in details of these organisations, but I will not mention specific to avoid defamation.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>About learning a new language/platform</title>
      <link>http://www.devcrafting.com/en/blog/2016/11-learn-new-language-platform/</link>
      <guid>http://www.devcrafting.com/en/blog/2016/11-learn-new-language-platform/</guid>
      <pubDate>Wed, 23 Nov 2016 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;As I said about F# in &lt;a href="/en/blog/2016/10-New-blog-and-website/"&gt;this post&lt;/a&gt;, I used a sort of "maturity model" to learn new languages/platforms. That's at least my way of learning based on some experiences, I don't know if it would be applicable to anyone. So I would like to expose facts that lead me to this "model".&lt;/p&gt;


</description>
    </item>
    <item>
      <title>New blog and website</title>
      <link>http://www.devcrafting.com/en/blog/2016/10-New-blog-and-website/</link>
      <guid>http://www.devcrafting.com/en/blog/2016/10-New-blog-and-website/</guid>
      <pubDate>Fri, 28 Oct 2016 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;I had two blogs in the past, the first one in English on Blogspot and then when I created DevCrafting company, I created a new site only in French with Office 365 (SharePoint).&lt;/p&gt;
&lt;p&gt;I never managed to keep writing new posts, for several reasons, mostly bad ones probably, but I would like to give another try with another approach. I want to talk about that as a feedback.&lt;/p&gt;
&lt;p&gt;Also, I would like to be able to write sometimes in English, sometimes in French depending on the subject.&lt;/p&gt;
&lt;p&gt;And last, I like the idea of &lt;a href="https://github.com/fsprojects/FsBlog"&gt;FsBlog&lt;/a&gt; and since it did not support all I wanted to do, I decided to play with F# on my own and to create my website and blog with F# as &lt;a href="http://tomasp.net/"&gt;Tomas Petricek did&lt;/a&gt;.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>Specialization in Agile : other visions than hyperspecialization</title>
      <link>http://www.devcrafting.com/en/blog/2011/10-specialization-in-agile/</link>
      <guid>http://www.devcrafting.com/en/blog/2011/10-specialization-in-agile/</guid>
      <pubDate>Thu, 06 Oct 2011 22:00:00 GMT</pubDate>
      <description>&lt;p&gt;I would like to write a post on this subject for a while (amongst lots of other…), and a post of Mike Cohn about &lt;a href="http://blog.mountaingoatsoftware.com/agile-in-the-age-of-hyperspecialization"&gt;Agile in the Age of Hyperspecialization&lt;/a&gt; reminds me the subject (in addition it is also a recurring subject at work for me). I wrote some comments on his blog, but I would like to detail a little bit here.&lt;/p&gt;  &lt;p&gt;First of all, I am not confortable with the analogy done between manufacturing activities (or buildings and civil works) and IT industry, which basically leads to reduce developers to “simple” workers that could work in a production line (cf. Ford, with respect for manufacturing workers)…and I think that’s a point that is totally missed with hyper-specialisation. &lt;/p&gt;  &lt;p&gt;I prefer other visions more suitable to our industry. In this first post, I will talk about “cultivate your code” analogy, “mentofacturing”, and feature teams approach.   &lt;br&gt;Then in a second post, I will dive into an illustration of what could be stereotypical organization nowadays with “hyperspecialization” and my vision (shared and applied in my team), which is best aligned with Agile and Lean principles from my point of view.&lt;/p&gt;


</description>
    </item>
    <item>
      <title>About communication mediums in general, but especially in enterprise</title>
      <link>http://www.devcrafting.com/en/blog/2010/02-about-communication-mediums/</link>
      <guid>http://www.devcrafting.com/en/blog/2010/02-about-communication-mediums/</guid>
      <pubDate>Mon, 15 Feb 2010 23:00:00 GMT</pubDate>
      <description>&lt;p&gt;&lt;span style="font-family:Arial;"&gt;I'd like to give my point of view about the subject of &lt;b&gt;communication&lt;/b&gt; &lt;b&gt;mediums&lt;/b&gt; in general, It is just a first try on this subject. I will dig &lt;b&gt;communication mediums in enterprise&lt;/b&gt; through communication tooling. The goal of this post is to &lt;b&gt;analyse which communication medium should be used for which purpose&lt;/b&gt;.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-family:Arial;"&gt;This post is quite general and focused on concepts (even if I am not an expert in the field), I will publish an example of what I mean with an example around tools that can implement what I explain in this post.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;  &lt;p&gt;&lt;span style="font-family:Arial;"&gt;Note : I do not talk about how people can change communication according to their behaviour, which is more psychology, I just talk about means, even it is sure that the way you communicate is also an important subject.&lt;/span&gt;&lt;/p&gt;  &lt;p&gt;&lt;span style="font-family:Arial;"&gt;I think communication as &lt;b&gt;the main factor of success in any project in general&lt;/b&gt;, because a project is rarely a personal one but the one of a community in general (which could be a couple, a team, a service, a department, an enterprise, and so on...). Good communication leads to more efficiency and comprehension.&lt;/span&gt;&lt;/p&gt;


</description>
    </item>
  </channel>
</rss>